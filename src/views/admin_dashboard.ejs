<!DOCTYPE html>
<html lang="en">

<head>
    <title>BookSaw - Admin Dashboard</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="author" content="">
    <meta name="keywords" content="">
    <meta name="description" content="">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">

    <link rel="stylesheet" type="text/css" href="css/normalize.css">
    <link rel="stylesheet" type="text/css" href="icomoon/icomoon.css">
    <link rel="stylesheet" type="text/css" href="css/vendor.css">
    <link rel="stylesheet" type="text/css" href="style.css">
    <link rel="stylesheet" type="text/css" href="css/cart_style.css">

    <style>
        .admin-section {
            padding: 50px 0;
            background-color: #f9f9f9;
        }

        .admin-container {
            max-width: 1000px;
            margin: 0 auto;
            background: #fff;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .admin-title {
            margin-bottom: 0;
        }

        .orders-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 30px;
        }

        .orders-table th,
        .orders-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .orders-table th {
            background-color: #f8f9fa;
            font-weight: 500;
        }

        .order-section {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }

        .section-title {
            margin-bottom: 20px;
            color: #333;
            font-weight: 600;
        }

        .btn-confirm {
            background: #fb9678;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            transition: background 0.3s;
        }

        .btn-confirm:hover {
            background: #f37e5c;
        }

        .badge {
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .badge-pending {
            background-color: #ffecb3;
            color: #e65100;
        }

        .badge-paid {
            background-color: #d1f7c4;
            color: #2e7b32;
        }

        .dashboard-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
        }

        .empty-orders {
            text-align: center;
            padding: 30px;
            color: #6c757d;
            background: #f8f9fa;
            border-radius: 4px;
            margin: 20px 0;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            background: #fb9678;
            color: white;
            border-radius: 4px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            opacity: 0;
            transform: translateY(-20px);
            transition: opacity 0.3s, transform 0.3s;
        }

        .notification.show {
            opacity: 1;
            transform: translateY(0);
        }

        .notification.error {
            background: #ff5252;
        }

        .refresh-button {
            background: #6c757d;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            transition: background 0.3s;
            margin-bottom: 20px;
        }

        .refresh-button:hover {
            background: #5a6268;
        }

        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #fb9678;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 2s linear infinite;
            margin: 20px auto;
            display: none;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>

<body>


    <section class="admin-section">
        <div class="container">
            <div class="admin-container">
                <div class="admin-header">
                    <h2 class="admin-title">Admin Dashboard</h2>
                    <div>
                        <span>Welcome, <%= adminName %></span>
                    </div>
                </div>

                <!-- Pending Orders Section -->
                <div class="order-section">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="section-title">Pending Orders</h3>
                        <button class="refresh-button" onclick="fetchOrders('pending')">Refresh</button>
                    </div>
                    <div id="pending-orders-loader" class="loader"></div>
                    <div id="pending-orders-container">
                        <div class="empty-orders">Loading pending orders...</div>
                    </div>
                </div>

                <!-- Paid Orders Section -->
                <div class="order-section">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="section-title">Paid Orders</h3>
                        <button class="refresh-button" onclick="fetchOrders('paid')">Refresh</button>
                    </div>
                    <div id="paid-orders-loader" class="loader"></div>
                    <div id="paid-orders-container">
                        <div class="empty-orders">Loading paid orders...</div>
                    </div>
                </div>

                <div class="dashboard-actions">
                    <a href="/homepage" class="btn-confirm">Back to Homepage</a>
                    <a href="/logout" class="btn-confirm" style="text-decoration:none;">Logout</a>
                </div>
            </div>
        </div>
    </section>


    <!-- Notification div -->
    <div id="notification" class="notification"></div>

    <script src="js/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
        crossorigin="anonymous"></script>
    <script src="js/plugins.js"></script>
    <script src="js/script.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Fetch both pending and paid orders when page loads
            fetchOrders('pending');
            fetchOrders('paid');
        });

        function fetchOrders(status) {
            // Show loader
            document.getElementById(`${status}-orders-loader`).style.display = 'block';
            
            fetch(`/admin/orders?status=${status}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch orders');
                    }
                    return response.json();
                })
                .then(data => {
                    // Hide loader
                    document.getElementById(`${status}-orders-loader`).style.display = 'none';
                    
                    const orders = data.orders;
                    const container = document.getElementById(`${status}-orders-container`);
                    
                    if (!orders || orders.length === 0) {
                        container.innerHTML = `<div class="empty-orders">No ${status} orders found</div>`;
                        return;
                    }
                    
                    let html = `
                        <table class="orders-table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Customer</th>
                                    <th>Email</th>
                                    <th>Address</th>
                                    <th>Amount</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    ${status === 'pending' ? '<th>Actions</th>' : ''}
                                </tr>
                            </thead>
                            <tbody>
                    `;
                    
                    orders.forEach(order => {
                        const orderDate = new Date(order.order_date).toLocaleDateString();
                        
                        html += `
                            <tr>
                                <td>#${order.order_id}</td>
                                <td>${order.name}</td>
                                <td>${order.email}</td>
                                <td>${order.address || 'N/A'}</td>
                                <td>$${order.total_amount}</td>
                                <td>${orderDate}</td>
                                <td>
                                    <span class="badge badge-${status}">${status}</span>
                                </td>
                        `;
                        
                        if (status === 'pending') {
                            html += `
                                <td>
                                    <button class="btn-confirm" onclick="confirmPayment(${order.order_id})">Confirm</button>
                                </td>
                            `;
                        }
                        
                        html += `</tr>`;
                    });
                    
                    html += `
                            </tbody>
                        </table>
                    `;
                    
                    container.innerHTML = html;
                })
                .catch(error => {
                    // Hide loader
                    document.getElementById(`${status}-orders-loader`).style.display = 'none';
                    
                    console.error(`Error fetching ${status} orders:`, error);
                    document.getElementById(`${status}-orders-container`).innerHTML = 
                        `<div class="empty-orders">Error loading ${status} orders. Please try again.</div>`;
                    
                    showNotification(`Failed to load ${status} orders`, 'error');
                });
        }

        function confirmPayment(orderId) {
            fetch(`/admin/confirm-payment?order_id=${orderId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to confirm payment');
                    }
                    return response.json();
                })
                .then(data => {
                    showNotification('Payment confirmed successfully');
                    
                    // Refresh both order lists
                    setTimeout(() => {
                        fetchOrders('pending');
                        fetchOrders('paid');
                    }, 1000);
                })
                .catch(error => {
                    console.error('Error confirming payment:', error);
                    showNotification('Failed to confirm payment', 'error');
                });
        }

        function showNotification(message, type = 'success') {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            
            // Show notification
            notification.classList.add('show');
            
            // Hide after 3 seconds
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
    </script>
</body>

</html>